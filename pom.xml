<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>io.jenkins.tools.distribution-service</groupId>
	<artifactId>custom-distribution-service</artifactId>
	<version>0.0.1</version>
	<name>Custom Jenkins Distribution Service</name>
	<description>The main idea behind the project is to build a customizable jenkins distribution service that could be used to build tailor-made jenkins distributions</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.10</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20200518</version>
		</dependency>
<!--		&lt;!&ndash; Why do we bundle the Maven Plugin??? &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>org.apache.maven.plugins</groupId>-->
<!--			<artifactId>maven-dependency-plugin</artifactId>-->
<!--			<version>3.1.1</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>2.9.9</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.6.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>3.3.3</version>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>1.23</version>
		</dependency>
		<dependency>
			<groupId>io.jenkins.tools.custom-war-packager</groupId>
			<artifactId>custom-war-packager-lib</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock</artifactId>
			<version>1.58</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
  
	<licenses>
    <license>
      <name>MIT License</name>
      <url>http://opensource.org/licenses/MIT</url>
    </license>
  </licenses>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
				<rulesets>
					<ruleset>/config/pmd.xml</ruleset>
				</rulesets>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>check</goal>
							<goal>cpd-check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
				<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.3</version>
				<executions>
				<execution>
					<id>coverage-initialize</id>
					<goals>
						<goal>prepare-agent</goal>
					</goals>
				</execution>
				<execution>
					<id>coverage-report</id>
					<phase>post-integration-test</phase>
					<goals>
						<goal>report</goal>
					</goals>
				</execution>
				<!-- Threshold -->
				<execution>
					<id>coverage-check</id>
					<goals>
						<goal>check</goal>
					</goals>
					<configuration>
						<rules>
							<rule>
								<element>CLASS</element>
								<excludes>
									<exclude>com.asimio.demo.Application</exclude>
								</excludes>
							</rule>
						</rules>
						<outputDirectory>${project.build.directory}/coverage-reports/jacoco</outputDirectory>
					</configuration>
				</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.4</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<failOnError>true</failOnError>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<!-- SUREFIRE-1226 workaround -->
					<trimStackTrace>false</trimStackTrace>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>display-info</id>
            <phase>validate</phase>
            <goals>
              <goal>display-info</goal>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.3.1,)</version>
                  <message>3.3.1 required to at least look at .mvn/ if it exists.</message>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>[1.8.0,)</version>
                </requireJavaVersion>
                <!-- TODO failing during incrementals deploy: MENFORCER-281
                <requirePluginVersions>
                  <banSnapshots>false</banSnapshots>
                </requirePluginVersions>
                -->
                <enforceBytecodeVersion>
                  <maxJdkVersion>1.8</maxJdkVersion>
                  <ignoredScopes>
                    <ignoredScope>test</ignoredScope>
                  </ignoredScopes>
                  <excludes>
                    <!-- Makes no sense to check core itself: -->
                    <exclude>org.jenkins-ci.main:jenkins-core</exclude>
                    <exclude>org.jenkins-ci.main:cli</exclude>
                    <exclude>org.jenkins-ci.main:jenkins-test-harness</exclude>
                    <exclude>org.jenkins-ci.main:remoting</exclude>
                    <exclude>org.kohsuke.stapler:stapler</exclude>
                    <exclude>org.kohsuke.stapler:stapler-groovy</exclude>
                    <exclude>org.kohsuke.stapler:stapler-jelly</exclude>
                    <exclude>org.kohsuke.stapler:stapler-jrebel</exclude>
                    <exclude>org.jenkins-ci:task-reactor</exclude>
                    <!--  findbugs dep managed to provided and optional so is not shipped and missing annotations ok -->
                    <exclude>com.google.code.findbugs:annotations</exclude>
                    <exclude>com.github.spotbugs:spotbugs-annotations</exclude>
                  </excludes>
                  <!-- To add exclusions in a Jenkins plugin, use:
                  <plugin>
                      <artifactId>maven-enforcer-plugin</artifactId>
                      <executions>
                          <execution>
                              <id>display-info</id>
                              <configuration>
                                  <rules>
                                      <enforceBytecodeVersion>
                                          <excludes combine.children="append">
                                              <exclude>â€¦</exclude>
                                          </excludes>
                                      </enforceBytecodeVersion>
                                  </rules>
                              </configuration>
                          </execution>
                      </executions>
                  </plugin>
                  (or just override java.level) -->
                </enforceBytecodeVersion>
                <bannedDependencies>
                  <excludes>
                    <exclude>javax.servlet:servlet-api</exclude>
                    <exclude>org.sonatype.sisu:sisu-guice</exclude>
                    <exclude>log4j:log4j:*:jar:compile</exclude>
                    <exclude>log4j:log4j:*:jar:runtime</exclude>
                    <exclude>commons-logging:commons-logging:*:jar:compile</exclude>
                    <exclude>commons-logging:commons-logging:*:jar:runtime</exclude>
                    <!-- Jenkins Test Harness is based on JUnit. Adding TestNG dependency would disable some of its functionality. -->
                    <exclude>org.testng:testng</exclude>
                  </excludes>
                </bannedDependencies>
                <requireUpperBoundDeps>
                  <excludes>
                    <exclude>com.google.guava:guava</exclude> <!-- TODO needed for Jenkins 2.71 and earlier -->
                    <exclude>commons-logging:commons-logging</exclude> <!-- ditto -->
                    <exclude>com.google.code.findbugs:jsr305</exclude> <!-- ditto -->
                    <exclude>net.java.dev.jna:jna</exclude> <!-- needed for Jenkins 1.585 and earlier -->
                  </excludes>
                </requireUpperBoundDeps>
              </rules>
            </configuration>
          </execution>
		          </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>extra-enforcer-rules</artifactId>
            <version>1.3</version>
          </dependency>
        </dependencies>
      </plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
		  <id>repo.jenkins-ci.org</id>
		  <url>https://repo.jenkins-ci.org/public/</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
		  <id>repo.jenkins-ci.org</id>
		  <url>https://repo.jenkins-ci.org/public/</url>
		</pluginRepository>
	</pluginRepositories>
</project>
